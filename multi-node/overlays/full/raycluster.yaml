apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: raytest
  namespace: rcarrata-llm
  labels:
    controller-tools.k8s.io: '1.0'
    kueue.x-k8s.io/queue-name: local-queue
spec:
  autoscalerOptions:
    idleTimeoutSeconds: 60
    imagePullPolicy: Always
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 512Mi
    upscalingMode: Default
  enableInTreeAutoscaling: false
  headGroupSpec:
    enableIngress: false
    rayStartParams:
      block: 'true'
      dashboard-host: 0.0.0.0
      num-gpus: '1'
    serviceType: ClusterIP
    template:
      metadata: {}
      spec:
        containers:
          - env:
              - name: MY_POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: RAY_USE_TLS
                value: '1'
              - name: RAY_TLS_SERVER_CERT
                value: /home/ray/workspace/tls/server.crt
              - name: RAY_TLS_SERVER_KEY
                value: /home/ray/workspace/tls/server.key
              - name: RAY_TLS_CA_CERT
                value: /home/ray/workspace/tls/ca.crt
            image: 'quay.io/rhoai/ray:2.23.0-py39-cu121'
            imagePullPolicy: Always
            lifecycle:
              preStop:
                exec:
                  command:
                    - /bin/sh
                    - '-c'
                    - ray stop
            name: ray-head
            ports:
              - containerPort: 6379
                name: gcs
                protocol: TCP
              - containerPort: 8265
                name: dashboard
                protocol: TCP
              - containerPort: 10001
                name: client
                protocol: TCP
            resources:
              limits:
                cpu: '2'
                memory: 8G
                nvidia.com/gpu: '1'
              requests:
                cpu: '2'
                memory: 8G
                nvidia.com/gpu: '1'
            volumeMounts:
              - mountPath: /etc/pki/tls/certs/odh-trusted-ca-bundle.crt
                name: odh-trusted-ca-cert
                subPath: odh-trusted-ca-bundle.crt
              - mountPath: /etc/ssl/certs/odh-trusted-ca-bundle.crt
                name: odh-trusted-ca-cert
                subPath: odh-trusted-ca-bundle.crt
              - mountPath: /etc/pki/tls/certs/odh-ca-bundle.crt
                name: odh-ca-cert
                subPath: odh-ca-bundle.crt
              - mountPath: /etc/ssl/certs/odh-ca-bundle.crt
                name: odh-ca-cert
                subPath: odh-ca-bundle.crt
              - mountPath: /home/ray/workspace/ca
                name: ca-vol
                readOnly: true
              - mountPath: /home/ray/workspace/tls
                name: server-cert
          - args:
              - '--https-address=:8443'
              - '--provider=openshift'
              - '--openshift-service-account=raytest-oauth-proxy'
              - '--upstream=http://localhost:8265'
              - '--tls-cert=/etc/tls/private/tls.crt'
              - '--tls-key=/etc/tls/private/tls.key'
              - '--cookie-secret=$(COOKIE_SECRET)'
              - '--openshift-delegate-urls={"/":{"resource":"pods","namespace":"rcarrata-llm","verb":"get"}}'
            env:
              - name: COOKIE_SECRET
                valueFrom:
                  secretKeyRef:
                    key: cookie_secret
                    name: raytest-oauth-config
            image: 'registry.redhat.io/openshift4/ose-oauth-proxy@sha256:1ea6a01bf3e63cdcf125c6064cbd4a4a270deaf0f157b3eabb78f60556840366'
            name: oauth-proxy
            ports:
              - containerPort: 8443
                name: oauth-proxy
                protocol: TCP
            resources: {}
            volumeMounts:
              - mountPath: /etc/tls/private
                name: proxy-tls-secret
                readOnly: true
        initContainers:
          - command:
              - sh
              - '-c'
              - 'cd /home/ray/workspace/tls && openssl req -nodes -newkey rsa:2048 -keyout server.key -out server.csr -subj ''/CN=ray-head'' && printf "authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = 127.0.0.1\nDNS.2 = localhost\nDNS.3 = ${FQ_RAY_IP}\nDNS.4 = $(awk ''END{print $1}'' /etc/hosts)\nDNS.5 = rayclient-raytest-rcarrata-llm.apps.dev.rhoai.rh-aiservices-bu.com\nDNS.6 = raytest-head-svc.rcarrata-llm.svc">./domain.ext && cp /home/ray/workspace/ca/* . && openssl x509 -req -CA ca.crt -CAkey ca.key -in server.csr -out server.crt -days 365 -CAcreateserial -extfile domain.ext'
            image: 'registry.redhat.io/ubi9@sha256:770cf07083e1c85ae69c25181a205b7cdef63c11b794c89b3b487d4670b4c328'
            name: create-cert
            resources: {}
            volumeMounts:
              - mountPath: /home/ray/workspace/ca
                name: ca-vol
                readOnly: true
              - mountPath: /home/ray/workspace/tls
                name: server-cert
        nodeSelector:
          nvidia.com/gpu.present: 'true'
        serviceAccountName: raytest-oauth-proxy
        tolerations:
          - effect: NoSchedule
            key: nvidia.com/gpu
            operator: Exists
        volumes:
          - configMap:
              items:
                - key: ca-bundle.crt
                  path: odh-trusted-ca-bundle.crt
              name: odh-trusted-ca-bundle
              optional: true
            name: odh-trusted-ca-cert
          - configMap:
              items:
                - key: odh-ca-bundle.crt
                  path: odh-ca-bundle.crt
              name: odh-trusted-ca-bundle
              optional: true
            name: odh-ca-cert
          - name: proxy-tls-secret
            secret:
              secretName: raytest-proxy-tls-secret
          - name: ca-vol
            secret:
              secretName: ca-secret-raytest
          - emptyDir: {}
            name: server-cert
  rayVersion: 2.7.0
  suspend: false
  workerGroupSpecs:
    - groupName: small-group-raytest
      maxReplicas: 2
      minReplicas: 2
      numOfHosts: 1
      rayStartParams:
        block: 'true'
        num-gpus: '2'
      replicas: 2
      scaleStrategy: {}
      template:
        metadata:
          annotations:
            key: value
          labels:
            key: value
        spec:
          containers:
            - env:
                - name: MY_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: RAY_USE_TLS
                  value: '1'
                - name: RAY_TLS_SERVER_CERT
                  value: /home/ray/workspace/tls/server.crt
                - name: RAY_TLS_SERVER_KEY
                  value: /home/ray/workspace/tls/server.key
                - name: RAY_TLS_CA_CERT
                  value: /home/ray/workspace/tls/ca.crt
              image: 'quay.io/rhoai/ray:2.23.0-py39-cu121'
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - '-c'
                      - ray stop
              name: machine-learning
              resources:
                limits:
                  cpu: '16'
                  memory: 48G
                  nvidia.com/gpu: '2'
                requests:
                  cpu: '16'
                  memory: 48G
                  nvidia.com/gpu: '2'
              volumeMounts:
                - mountPath: /etc/pki/tls/certs/odh-trusted-ca-bundle.crt
                  name: odh-trusted-ca-cert
                  subPath: odh-trusted-ca-bundle.crt
                - mountPath: /etc/ssl/certs/odh-trusted-ca-bundle.crt
                  name: odh-trusted-ca-cert
                  subPath: odh-trusted-ca-bundle.crt
                - mountPath: /etc/pki/tls/certs/odh-ca-bundle.crt
                  name: odh-ca-cert
                  subPath: odh-ca-bundle.crt
                - mountPath: /etc/ssl/certs/odh-ca-bundle.crt
                  name: odh-ca-cert
                  subPath: odh-ca-bundle.crt
                - mountPath: /home/ray/workspace/ca
                  name: ca-vol
                  readOnly: true
                - mountPath: /home/ray/workspace/tls
                  name: server-cert
          initContainers:
            - command:
                - sh
                - '-c'
                - 'cd /home/ray/workspace/tls && openssl req -nodes -newkey rsa:2048 -keyout server.key -out server.csr -subj ''/CN=ray-head'' && printf "authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = 127.0.0.1\nDNS.2 = localhost\nDNS.3 = ${FQ_RAY_IP}\nDNS.4 = $(awk ''END{print $1}'' /etc/hosts)">./domain.ext && cp /home/ray/workspace/ca/* . && openssl x509 -req -CA ca.crt -CAkey ca.key -in server.csr -out server.crt -days 365 -CAcreateserial -extfile domain.ext'
              image: 'registry.redhat.io/ubi9@sha256:770cf07083e1c85ae69c25181a205b7cdef63c11b794c89b3b487d4670b4c328'
              name: create-cert
              resources: {}
              volumeMounts:
                - mountPath: /home/ray/workspace/ca
                  name: ca-vol
                  readOnly: true
                - mountPath: /home/ray/workspace/tls
                  name: server-cert
          nodeSelector:
            nvidia.com/gpu.present: 'true'
          tolerations:
            - effect: NoSchedule
              key: nvidia.com/gpu
              operator: Exists
          volumes:
            - configMap:
                items:
                  - key: ca-bundle.crt
                    path: odh-trusted-ca-bundle.crt
                name: odh-trusted-ca-bundle
                optional: true
              name: odh-trusted-ca-cert
            - configMap:
                items:
                  - key: odh-ca-bundle.crt
                    path: odh-ca-bundle.crt
                name: odh-trusted-ca-bundle
                optional: true
              name: odh-ca-cert
            - name: ca-vol
              secret:
                secretName: ca-secret-raytest
            - emptyDir: {}
              name: server-cert
